○シンプルなWebサーバーの構築
・HTMLとJavascriptの提供
・Websocketを使った通信

net/httpパッケージでWebサーバを起動できる
http.HandleFuncでは、アクセスURLに対して実行関数を紐づける

テンプレート
    こんにちは{name}さん、お元気ですか？
みたいなテンプレート文の拡張
GOの標準ライブラリだと、テキスト向け(text/template)とHTML向け(html/template)の2つのテンプレートがある
html/templateだと、コンテキストを認識している点が異なる
これにより、不正なスクリプト埋め込みや、URLエンコードが出来る
またテンプレートにより外部ファイルの読み込みも出来る

テンプレートのコンパイル
テンプレートを解釈してデータを埋め込める状態にするための処理
テンプレートを利用する前に一度コンパイルが必要
コンパイルされたテンプレートは何度でも使える
    *template.Template
    テンプレート（コンパイル後？）
    template.Must(template.ParseFiles(filepath.Join("templates", t.filename)))
    でファイル読み込み
    *template.Template.Execute(io.writer, data)
    データで拡張したテンプレートをIOに書き込むっぽい

1回だけの処理
やり方は色々ある
sync.Once.Doを使うと複数のGOルーチンから実行されても一回だけの実行を保証する
クロージャ―の中で初期化を行うと、実行があった時に初期化されるので、
負荷が重いときとかに有効（遅延初期化）

ファイルパスについて
GOのプログラムの参照するファイルパスは、実行時のディレクトリからの相対パス（main.goからではない）
プロジェクトルートをちゃんときめとかないと、ファイルアクセスがかなり面倒